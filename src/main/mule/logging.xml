<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="log-info-subFlow" doc:id="5aeb9501-f487-4aba-a88a-2ef149bb5c36" >
		<async doc:name="Async" doc:id="c42733bc-f632-4f16-8bfa-55577d373232">
			<flow-ref doc:name="Call Create Log Message" doc:id="10fed706-be81-416f-a262-30fc91788f7c" name="create-log-message-subFlow"/>
			<logger level="INFO" doc:name="Log INFO" doc:id="fc6c080c-b4d9-4483-9524-2494e90b1c76" message="#[vars.logMessage]"/>
		</async>
	</sub-flow>
	<sub-flow name="log-error-subFlow" doc:id="7c61d9b1-e563-4117-a4b7-853017ec79a3" >
		<async doc:name="Async" doc:id="6bca0140-0e1b-4556-85db-7a060629044a" >
			<flow-ref doc:name="Call Create Log Message" doc:id="95e25832-2edb-4643-832f-d1d2a808822a" name="create-log-message-subFlow" />
			<logger level="ERROR" doc:name="Log ERROR" doc:id="cecb11d6-f846-41ec-a1d4-fc5c05a566c1" message="#[vars.logMessage]" />
		</async>
		<choice doc:name="Choice if HTTP Request, we need to generate proper response" doc:id="e30b9ea7-2784-4d7f-be54-e0ff6d6634c7" >
			<when expression="#[!isEmpty(error) and !isEmpty(attributes.headers.soapaction)]">
				<flow-ref doc:name="Set SOAP Response Payload" doc:id="3b79dc57-8e1f-4e3c-bc6e-f55f192b19fa" name="set-soap-response-payload"/>
			</when>
			<when expression="#[!isEmpty(error) and !isEmpty(attributes.listenerPath)]">
				<flow-ref doc:name="Set HTTP Response Payload" doc:id="9f29b02a-7c73-49fd-9bb8-acafd504e86b" name="set-http-response-payload" />
			</when>
		</choice>
	</sub-flow>
	<sub-flow name="log-warn-subFlow" doc:id="69f618ce-ca55-46d3-bd56-53a9758765d6" >
		<async doc:name="Async" doc:id="0f3085e2-079c-4231-9639-bca1787d4649" >
			<flow-ref doc:name="Call Create Log Message" doc:id="cd531788-9c34-45b2-ac73-5ad748b78b79" name="create-log-message-subFlow" />
			<logger level="WARN" doc:name="Log WARN" doc:id="e340f15a-f0c8-408a-867f-a69c1ce6f6cb" message="#[vars.logMessage]" />
		</async>
	</sub-flow>	
	<sub-flow name="create-log-message-subFlow" doc:id="77e0d184-e72c-41fc-ab9e-05ef0942fa00" >
		<ee:transform doc:name="Create Log Message" doc:id="7d38ed64-3823-4749-956d-75df4d1c10e3">
				<ee:message>
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="logMessage"><![CDATA[%dw 2.0
import modules::dwOps
import try from dw::Runtime
output application/json
var parsedPayload = (if (p('log.includePayload')) try(()->write(payload, "application/json")).result default "Unable to parse payload" else "")
---
{
	payload: parsedPayload
}
++ (if (vars.logMessage?) "message": vars.logMessage else {})
++ (if (!isBlank(p('log.attributes'))) "attributes": dwOps::flattenObject(attributes,"") filterObject(p('log.attributes') splitBy(/,\s*/) contains $$ as String) else {})
++ (if (!isEmpty(error)) 	"error": {
		"type" : (error.errorType.namespace default "ERROR") ++ ":" ++ (error.errorType.identifier default "UNKNOWN"),
		"description": error.description
} else {})]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
	</sub-flow>
	<sub-flow name="set-http-response-payload" doc:id="5233bc2e-f64c-44ce-993c-29f5e14a9ed3" >
		<ee:transform doc:name="Set HTTP Response Payload" doc:id="6fcf5420-9a07-475a-9550-dae6555ba705">
					<ee:message>
				<ee:set-payload resource="set-http-response.dwl" />
					</ee:message>
					<ee:variables>
					</ee:variables>
				</ee:transform>
		<set-variable value="#[payload.code]" doc:name="Set httpStatus Variable" doc:id="1dbe8d2c-b11d-4a86-ac82-b76b41cce70f" variableName="httpStatus" />
	</sub-flow>
	<sub-flow name="set-soap-response-payload" doc:id="5a85b550-c667-47db-8e01-368583f861e0" >
		<ee:transform doc:name="Set SOAP Fault Response" doc:id="8a030da3-b132-4272-8277-8cf34de87a11" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soap http://schemas.xmlsoap.org/soap/envelope/
---
{
    soap#Envelope: {
    soap#Body: {
        soap#Fault: {
		"type" : 
                faultcode: (error.errorType.namespace default "ERROR") ++ ":" ++ (error.errorType.identifier default "UNKNOWN"),
                faultstring: error.description default "Unknown",
            }   
        }
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	
</mule>
